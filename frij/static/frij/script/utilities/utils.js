// Generated by CoffeeScript 1.8.0
(function() {
  var frijapp;

  frijapp = angular.module('frij.utility', ['ui.router', 'frij.directives', 'frij.services', 'frij.controllers']);

  frijapp.config(function($interpolateProvider, $stateProvider, $urlRouterProvider) {
    var currentDate;
    $interpolateProvider.startSymbol('[[');
    $interpolateProvider.endSymbol(']]');
    currentDate = new Date();
    $urlRouterProvider.otherwise('/' + currentDate.getFullYear() + '/' + (currentDate.getMonth() + 1) + '/');
    return $stateProvider.state('utilityList', {
      url: '/{year}/{month}/',
      templateUrl: '../static/frij/partials/utility_form.html',
      controller: 'utilityListController',
      resolve: {
        utilityAmounts: function(UtilityChargePeriod, $stateParams) {
          UtilityChargePeriod.fetch(new Date($stateParams.year, parseInt($stateParams.month) - 1));
          return UtilityChargePeriod.data();
        },
        navControls: function($stateParams, $http) {
          var navCtrl;
          navCtrl = {
            hasNext: false,
            hasPrev: false,
            nextDatePeriod: new Date(parseInt($stateParams.year), parseInt($stateParams.month), 1),
            prevDatePeriod: new Date(parseInt($stateParams.year), parseInt($stateParams.month) - 2, 1)
          };
          $http({
            method: 'GET',
            url: '/frij/utilities/' + navCtrl.nextDatePeriod.getFullYear() + '/' + (parseInt(navCtrl.nextDatePeriod.getMonth()) + 1) + '/'
          }).then(function(response) {
            return navCtrl.hasNext = response.data.utilities !== void 0 && response.data.utilities.length > 0;
          });
          $http({
            method: 'GET',
            url: '/frij/utilities/' + navCtrl.prevDatePeriod.getFullYear() + '/' + (parseInt(navCtrl.prevDatePeriod.getMonth()) + 1) + '/'
          }).then(function(response) {
            return navCtrl.hasPrev = response.data.utilities !== void 0 && response.data.utilities.length > 0;
          });
          return navCtrl;
        },
        months: function() {
          return ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
        }
      }
    });
  });

  frijapp.config(function($httpProvider) {
    var getCookie;
    getCookie = function(name) {
      var cookie, _i, _len, _ref;
      _ref = document.cookie.split(';');
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        cookie = _ref[_i];
        if (cookie && name === (cookie.trim().split('='))[0]) {
          return decodeURIComponent(cookie.trim().slice(1 + name.length));
        }
      }
      return null;
    };
    return $httpProvider.defaults.headers.common['X-CSRFToken'] = getCookie("csrftoken");
  });

}).call(this);

//# sourceMappingURL=utils.js.map
